.toc {
	& > ol {
		columns: 150px 2;
		column-gap: var(--layout-gutter);
	}

	/*
	 * Because ::marker isn't interoperably stylable, I am using good old ::before to style it as I wish.
	 * 1: Cancels out ::marker
	 * 2: Makes the pseudo content overflow _away_ from the list item content
	 * 3: Ensure it doesn't shift the list item content
	 */
	ol {
		counter-reset: tocList;
		list-style-type: ''; /* 1 */

		ol {
			--toc-marker-type: upper-alpha;

			ol {
				--toc-marker-type: lower-roman;
			}
		}
	}

	li {
		counter-increment: tocList;

		break-inside: avoid;

		&::before {
			content: counter(tocList, var(--toc-marker-type, decimal)) ' ';

			display: inline-flex; /* 2 */
			justify-content: flex-end; /* 2 */
			inline-size: 0px; /* 3 */

			font-size: 0.5em;
			letter-spacing: 0.25em;
		}

		&:not(:has(> a:is(:hover, :focus-visible)))::before {
			color: color-mix(in hsl, var(--C-text), transparent 30%);
		}
	}
}

@media (--toc-side) {
	.toc {
		position: sticky;
		inset-block-start: var(--layout-gutter);
		z-index: 1; /* If there is content in the full bleed area, z-index ensures the TOC is placed above the content */

		/* Large-ish negative number (-9 should cover most cases since having a TOC means there's at least a moderate amount of content)
			fills up all the rows since `1 / -1` makes the first item in the main column take up as much space as just this TOC row… */
		grid-row: 1 / -9;
		grid-column: --fullbleed-start / --wide-start;
		justify-self: end;
		align-self: start;
		max-block-size: calc(100dvh - var(--layout-gutter) * 2);
		overflow: auto;
		padding-inline: calc(var(--layout-gutter) * 2) var(--layout-gutter);
		padding-block-end: var(--size-xs);

		& + * {
			--flow-space: 0px;
		}
	}

	/* Using low specificity to ensure hover styles take priority */
	:where(.toc-list li[data-current]) > :any-link {
		--LINK-decoration-thickness: calc(var(--link-decoration-thickness, 1px) + 2px);
	}

	.toc-title,
	.toc-list a {
		transition: opacity var(--anim-short) var(--easing-in-out);
	}

	.toc:not(:hover, :focus-within) :is(.toc-title, li:not([data-current]):not(:has(li[data-current])) > a) {
		opacity: 0.67;
	}
}
