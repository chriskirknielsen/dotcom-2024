.expander-button:not(#\#) {
	position: sticky;
	inset-block-start: 0;
	z-index: 2;

	-webkit-user-select: none;
	user-select: none;

	--CTA-display: flex;

	&::-webkit-details-marker {
		display: none;
	}
}

.expander-button-arrow {
	/*
     * 1: Equilateral triangle has h = √3 * a / 2, where a is the side
     * 2: Center of mass for a triangle, for side a, is C = (a√3)/3
     * 3: Compensate to be optically sized similar to the original triangle
     */

	display: inline-block;
	block-size: 0;
	inline-size: 0;

	--SQRT3: 1.7321;
	--CENTER-MASS: calc(100% - var(--SQRT3) * 100% / 3) 50%; /* 2 */
	--arrow-side-size: 0.5em;

	border-width: calc(var(--arrow-side-size) / 2) 0 calc(var(--arrow-side-size) / 2) calc(var(--SQRT3) * var(--arrow-side-size) / 2); /* 1 */
	border-style: solid;
	border-color: transparent transparent transparent var(--EXPANDER-button-arrow-color, currentColor);

	transform-origin: 42.5% 50%;
	transform-origin: var(--CENTER-MASS);

	@media (--accept-motion) {
		transition: all var(--anim-short) var(--easing-in-out);
		transition-property: clip-path, scale, rotate;
	}

	.expander[open] &,
	.expander-button[aria-pressed='true'] & {
		rotate: 90deg;
	}

	.expander-button[data-indeterminate] > & {
		--CLIP: 75%;
		clip-path: circle(var(--CLIP) at var(--CENTER-MASS));
	}

	.expander-button[data-indeterminate='true'] > & {
		--CLIP: 25%;
		scale: var(--SQRT3); /* 3 */
	}
}

.expander-content {
	--CODE-bg: var(--C-surface-alt, var(--C-canvas));
	padding: var(--size-m) var(--layout-gutter);
	margin-inline: var(--size-s);

	background: var(--C-surface);
	box-shadow: var(--_shadow);
}

cycling-expander {
	isolation: isolate;
}

cycling-expander .expander[data-open='true'] .expander-content {
	--ANIM-start-opacity: 0;
}

@media (--accept-motion) {
	cycling-expander .expander[data-open='true'] .expander-content,
	:nth-child(-n + 4 of cycling-expander:has(.expander[data-open='true']) ~ *) {
		/* Animating the next 4 elements should make the illusion relatively effective */
		animation: cyclingExpanderReveal var(--anim-long) var(--easing-circ-in) 1 backwards;
	}
}

@keyframes cyclingExpanderReveal {
	from {
		opacity: var(--ANIM-start-opacity, 1);
		transform: translateY(-2rem);
	}
}

/* Adapted from https://nerdy.dev/open-and-close-transitions-for-the-details-element */
@media (--accept-motion) {
	@supports (interpolate-size: allow-keywords) {
		details {
			interpolate-size: allow-keywords;

			&::details-content {
				block-size: 0;
				overflow-y: clip;

				transition-property: content-visibility, opacity, block-size;
				transition-behavior: allow-discrete;
				transition-duration: var(--anim-short);
				transition-timing-function: var(--easing-out);
			}

			&[open]::details-content {
				block-size: auto;

				transition-duration: var(--anim-medium);
			}
		}
	}
}
