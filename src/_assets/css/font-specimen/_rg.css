body {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='54.923' height='95.129' viewBox='0 0 54.923 95.129'%3E%3Cg fill='none' stroke='rgba(255,255,255,0.15)'%3E%3Cpolygon points='54.923 63.42 54.923 31.71 27.462 15.855 0 31.71 0 63.42 27.462 79.275 54.923 63.42'/%3E%3Cline x1='27.462' x2='27.462' y2='15.855'/%3E%3Cline x1='27.462' y1='79.275' x2='27.462' y2='95.129'/%3E%3C/g%3E%3C/svg%3E");
    background-size: 56px auto;
    background-position: center;
}

h1 {
    font-size: 5rem;
    font-size: clamp(2rem, calc(2rem + (5 - 2) * ((100vw - 20rem) / (64 - 20))), 5rem);
    line-height: 1;
}

h2 {
    position: relative;

    line-height: 1.2;

    &::before {
        content: '⬡';

        position: absolute;
        inset-block-start: 0.5em;
        inset-inline-start: -1.25em;

        width: 0.75em;
        height: 1em;

        font-size: 0.5em;
        line-height: 1;
    }
}

.list {
    & > li::marker {
        content: '⬢ \0020';
    }
}

.header {
    --link: var(--palette-03);
    --link-active: var(--palette-04);

    font-weight: bold;
    color: var(--color-main);
    background: linear-gradient(90deg, #0004, #0000, #0004) var(--palette-06);
    outline-width: 1px;
    outline-color: var(--palette-01);
}

.footer {
    color: var(--color-main);
    background-color: var(--bg-alt);
}

.main-heading-block,
.glyph-split,
.footer {
    outline: 2px solid var(--palette-02);
    box-shadow: 0 0 32px var(--palette-02);
}

/* Interactives and reused styles */
.demo-grid-multi {
    color: var(--color-main);
}

button.glyph:is(:hover, :focus-visible):not(#\#) {
    color: var(--color-alt);
}

.preview-input-wrap input[type='text'],
.styled-button {
    --inner-glow: inset 0 0 16px var(--bg-alt);
    --outer-glow: 0 0 8px var(--color-alt);

    padding: 0.25em 0.75em;

    font: inherit;
    line-height: 1.1;
    color: var(--bg-alt);
    border: 2px solid var(--bg-main);
    border-radius: 4em;
    background: var(--color-alt);
    box-shadow: var(--inner-glow);
    outline: 1px solid var(--bg-main);
    outline-offset: -0.5px;

    transition: box-shadow var(--easing) 300ms;

    &:is(:hover, :focus-visible) {
        --inner-glow: inset 0 0 8px var(--bg-alt);

        box-shadow: var(--inner-glow), var(--outer-glow);
    }

    &:focus {
        outline: 2px solid var(--color-alt);
    }
}

.styled-button {
    text-transform: uppercase;
}

:is(.styled-button, .download-button) > span {
    display: inline-block;
    line-height: inherit;

    &::before {
        content: "";
        display: inline-block;
        height: 1em;
    }
}

.download-button {
    --dl-button-depth: 0.375rem;
    --dl-button-offset: 0px;

    position: relative;

    padding: 0.25em 2em;

    text-decoration: none;
    color: var(--palette-04);
    text-shadow: 0 1px 0 var(--palette-01), 0 -1px 0 var(--palette-05);
    border-radius: 4px;

    transform: translateY(var(--dl-button-offset, 0px));

    @media (prefers-reduced-motion: no-preference) {
        transition: transform 300ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    &::before,
    &::after {
        content: '';
        position: absolute;
        inset: 0;

        border-radius: inherit;

        transition: inherit;
        clip-path: polygon(0 50%, 0.75em 0, calc(100% - 0.75em) 0, 100% 50%, calc(100% - 0.75em) 100%, 0.75em 100%);
    }

    &::before {
        /* Button Face */
        z-index: -1;

        background: linear-gradient(-45deg, var(--palette-06, orange), var(--palette-07, yellow), var(--palette-06, orange));
        box-shadow: inset 0 -1px 4px rgba(255, 255, 255, 0), inset 0 -0.25em 2em rgba(0, 0, 0, 0.25);
    }

    &::after {
        /* Button Depth */
        z-index: -2;

        background: var(--palette-06) linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
        box-shadow: inset 0 calc(var(--dl-button-depth) * -1) calc(var(--dl-button-depth) * 2) rgba(0, 0, 0, 0.25);

        transform: translateY(calc(var(--dl-button-depth) + var(--dl-button-offset) * -1));
    }

    &:hover,
    &:focus {
        --dl-button-offset: calc(var(--dl-button-depth) * 0.5);

        color: var(--palette-04);
    }

    &:focus {
        outline: 4px dashed var(--palette-07);
    }

    &:focus:not(:focus-visible) {
        outline: none;
    }

    &:active {
        --dl-button-offset: var(--dl-button-depth);
    }
}

.sentence-sample {
    font-size: 4rem;
    font-size: clamp(4rem, calc(4rem + (6 - 4) * ((100vw - 20rem) / (64 - 20))), 6rem);
    line-height: 1.1;
    text-shadow: -2px 2px 0 var(--bg-main), -3px 3px 0 var(--palette-08);
}

/* Hero section */
.main-heading-block {
    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: var(--layout-gutter);

    background: var(--palette-03);
}

.main-heading-bg {
    position: relative;

    width: 90%;
    max-width: min(32rem, 60vw);
    height: auto;
    margin: auto;
}

.cogwheel {
    width: 100%;

    @media (prefers-reduced-motion: no-preference) {
        animation: revealScale 1s cubic-bezier(0.215, 0.61, 0.355, 1) 1;
    }
}

.cogwheel * {
    fill: none;
    stroke: var(--color-alt);
    stroke-width: 0.5;
}

.cogwheel-rings {
    transform-origin: 50% 50%;

    @media (prefers-reduced-motion: no-preference) {
        animation: fullRotation 60s linear infinite;
    }
}

.lombax-silhouette {
    position: absolute;

    inset: 0;

    width: 75%;
    margin: auto;

    fill: currentColor;
    stroke: var(--bg-alt);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 4;
    paint-order: stroke;

    @media (prefers-reduced-motion: no-preference) {
        animation: revealUpwards 1s cubic-bezier(0.215, 0.61, 0.355, 1) 500ms 1 backwards;
    }
}

.main-heading-text {
    position: relative;

    display: inline-flex;
    flex-direction: column;
    justify-content: center;
}

.main-heading-title {
    margin: 2rem auto 0;
    padding: 0 0.5em;

    font-size: min(16rem, var(--main-heading-magic-number));
    color: var(--palette-01);
    text-shadow: -2px 2px 0 var(--bg-main), -3px 3px 0 var(--palette-08);
}

.main-heading-sub {

    &::before,
    &::after {
        content: '⬢';

        display: inline-block;

        font-size: 0.5em;
        font-style: normal;
        vertical-align: 0.42em;
        color: var(--color-alt);
    }

    &::before {
        padding-inline-end: 1em;
    }

    &::after {
        padding-inline-start: 1em;
    }
}

/* Test Drive */
.preview-input-wrap button {
    font-size: inherit;
}

.preview-fallback-input {
    --preview-fallback-font-size: clamp(4rem, calc(4rem + (8 - 4) * ((100vw - 20rem) / (64 - 20))), 8rem);
}

.preview-option {
    input[type='checkbox'] {
        --sqrt3: 1.7321;
        --thumb-height: calc(var(--thumb-width) * var(--sqrt3) / 2);
        --thumb-radius: 0;
        --thumb-distance: calc(var(--thumb-height) / (2 * var(--sqrt3)));
        --switch-radius: 0;
        --switch-padding: 4px;

        --switch-height: calc((var(--switch-padding) + var(--switch-border)) * 2 + var(--thumb-height));
        --switch-distance: calc(var(--switch-height) / (2 * var(--sqrt3)));
        /* d = h / (2*tan(60°)); with h = the height of the button */

        border: 0;
        background:
            linear-gradient(to bottom, var(--thumb-color) var(--switch-border), transparent 0) 0 100%,
            /* top border */
            linear-gradient(to top, var(--thumb-color) var(--switch-border), transparent 0) 0 0,
            /* bottom border */
            linear-gradient(-60deg, transparent calc(50% - var(--switch-border)), var(--thumb-color) 0) no-repeat 0 0 / var(--switch-distance) 50%,
            /* top left */
            linear-gradient(60deg, transparent calc(50% - var(--switch-border)), var(--thumb-color) 0) no-repeat 100% 0 / var(--switch-distance) 50%,
            /* top right */
            linear-gradient(60deg, var(--thumb-color) calc(50% + var(--switch-border)), transparent 0) no-repeat 0 100% / var(--switch-distance) 50%,
            /* bottom left */
            linear-gradient(-60deg, var(--thumb-color) calc(50% + var(--switch-border)), transparent 0) no-repeat 100% 100% / var(--switch-distance) 50%;
        /* bottom right */
        background-color: var(--palette-03);
        background-clip: border-box;

        clip-path: polygon(var(--switch-distance) 0,
                calc(100% - var(--switch-distance)) 0,
                100% 50%,
                calc(100% - var(--switch-distance)) 100%,
                var(--switch-distance) 100%,
                0 50%);

        &::before {
            clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
        }
    }
}