

{{ set dateInfo }}
    <time datetime="{{ date |> dateFormat({ format: 'iso' }) }}" title="{{ date |> dateFormat({ format: 'iso' }) }}">{{ date |> dateFormat({ format: 'nice', lang: lang }) }}</time>
    {{ if updated }}
        <br>
        <span class="fontSize-tiny">(Updated
            {{- if (updated |> dateFormat) != (date |> dateFormat) -}}
                <time datetime="{{ updated |> dateFormat({ format: 'iso' }) }}" title="{{ updated |> dateFormat({ format: 'iso' }) }}">
                    {{ updated |> dateFormat({ format: 'nice', lang: lang }) }}</time>
            {{- /if }})
        </span>
    {{ /if }}
{{ /set }}

{{ set pageHero }}
    {{ component 'hero', {
        ext: 'vto',
        heroTags: (tags |> sort((a,b) => a.localeCompare(b))),
        heroTitle: title,
        heroSup: dateInfo,
        pageContext: page
    } }}
{{ /set }}

{{ set pageFooter }}
    <footer class="signoff">
        <div class="signoff-photo">
            <img
                src="{{ [assets.images, 'profile.jpg'] |> toPath |> toNetlifyImage({ w: 160 }) }}"
                alt=""
                width="160"
                height="160"
                loading="lazy"
            >
        </div>
        <div class="signoff-message">
            <p class="signoff-title | h4">Hey, I’m <span class="p-given-name">{{ metadata.author.shortname }}</span>, a front-end developer, CSS nerd, and designer.</p>
            <p class="signoff-body | fontSize-smaller">
                You can find me on
                <a href="{{ social.mastodon.url }}" class="link-label-anchor">
                    {{ svg 'mastodon', { class: 'inline-icon inline-icon--center', ariaHidden: true } }}
                    <span class="link-label-text">Mastodon</span></a>.
                I’ve <a href="/designs/">designed some (dare I say) cool
                <span class="signoff-decorators" aria-hidden="true">
                    {{ set cssStickerData = designs |> find('slug', 'css-logo-solid') }}
                    {{ set htmlShirtData = designs |> find('slug', 'vhs-html') }}
                    {{ set jsShirtData = designs |> find('slug', 'vhs-js-dark') }}
                    <img src="{{ [assets.images, 'designs', cssStickerData.img] |> toPath |> toNetlifyImage({ w: 64 }) }}" alt="A CSS logo on a purple background" width="64" height="64">
                    <img src="{{ [assets.images, 'designs', htmlShirtData.img] |> toPath |> toNetlifyImage({ w: 64 }) }}" alt="A light retro t-shirt design with references to HTML" width="64" height="64">
                    <img src="{{ [assets.images, 'designs', jsShirtData.img] |> toPath |> toNetlifyImage({ w: 64 }) }}" alt="A dark retro t-shirt design with references to JavaScript" width="64" height="64">
                </span>
                apparel/stickers</a> if you’d like to <a href="/support/">support me</a>. Thanks a ton!
            </p>
        </div>
    </footer>

    {{ if lang == 'en' || !lang }}
        {{ set prevPost = collections["_posts.en"] |> getPreviousCollectionItem }}
        {{ set nextPost = collections["_posts.en"] |> getNextCollectionItem }}
        <nav aria-label="More posts" class="grouper grouper--wrap justifyContent-center">
            {{ if prevPost }}
                {{ component 'cta', { ext: 'vto', icon: 'arrow-left', iconBefore: true, url: prevPost.url, safeLabel: true, label: { text: "Previously", aria: "Previous post" } } }}
            {{ /if }}
            
            {{ if !metadata.nakedJs }}
                {{ component 'cta', { ext: 'vto', icon: 'arrow-shuffle', safeLabel: true, label: { text: "Random", aria: "Random post" }, ctaClass: 'hide-when-nojs textDecoration-underline', ctaAttr: 'data-randompost' } }}
                {{ js 'foot-randompost' }}
                document.querySelector('[data-randompost]').onclick = () => fetch('/search.json').then((response) => response.json()).then((all) => {
                    const enPosts = all.filter(p => p.type === '_posts' && (!p.lang || p.lang === 'en') && !window.location.href.includes(p.url));
                    const random = enPosts[ Math.floor(enPosts.length * Math.random()) ];
                    window.location.href = random.url;
                });
                {{ /js }}
            {{ /if }}
            
            {{ if nextPost }}
                {{ component 'cta', { ext: 'vto', icon: 'arrow-right', url: nextPost.url, safeLabel: true, label: { text: "Up next", aria: "Next post" } } }}
            {{ /if }}
        </nav>
    {{ /if }}
{{ /set }}

{{ layout 'layouts/page.vto' { pageHero, pageFooter } }}
    {{ if originalUrl }}
        <div>
        {{ if originalTitle }}
            {{ component 'cta', { ext: 'vto', url: originalUrl, label: originalTitle, icon: 'arrow-right' } }}
        {{ else }}
            View original post: <a href="{{ originalUrl }}">{{ originalUrl }}</a>
        {{ /if }}
        </div>
        <hr>
    {{ /if }}

    {{ content }}

    {{ if externalUrl }}
        <hr>
        <div>
        {{ if externalHost }}
            {{ component 'cta' { ext: 'vto', url: externalUrl, label: `View original post on ${externalHost}`, icon: 'arrow-right' } }}
        {{ else }}
            View original post: <a href="{{ externalUrl }}">{{ externalUrl }}</a>
        {{ /if }}
        </div>
    {{ /if }}
{{ /layout }}