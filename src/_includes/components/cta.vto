{{# Normalise from the nav file #}}
{{ if path && !url }}{{ set url = path }}{{ /if }}
{{ set iconBefore = iconBefore || false }}
{{ set iconSvgOpts = iconSvgOpts || {} }}
{{ set iconClass = iconClass || 'inline-icon' }}{{# Set to an empty space for no-scale behaviour #}}
{{ set ctaType = url ? 'a' : 'button' }}
{{ set iconRender -}}
    {{ if icon }}
        {{ svg icon, Object.assign({ class: iconClass + ' linecap-auto', ariaHidden: true }, iconSvgOpts) }}
    {{ else if iconStack }}
        <div class="cellstack">
            {{ svg iconStack.idle, Object.assign({ class: iconClass + ' button-content button-content--idle', ariaHidden: true }, iconSvgOpts) }}
            {{ svg iconStack.pressed, Object.assign({ class: iconClass + ' button-content button-content--pressed', ariaHidden: true }, iconSvgOpts) }}
        </div>
    {{ /if }}
{{- /set }}
{{> let emptyLabel = true }}
{{ set labelRender -}}
    {{ if label.aria }}
        <span class="visually-hidden">{{ label.aria }}</span>
        {{ if label.text }}
            {{> emptyLabel = false }}
            <span aria-hidden="true">{{ safeLabel ? label.text : (label.text |> escape) }}</span>
        {{ /if }}
    {{ else if label }}
        {{> emptyLabel = false }}
        <span>{{ safeLabel ? label : (label |> escape) }}</span>
    {{ /if }}
{{ /set }}
{{ set classList }}button {{ if (icon || iconStack) && emptyLabel }}button--icon-only{{ /if }} {{ ctaClass || '' }}{{ /set }}
<{{ctaType}}
    {{ if url }}
        href="{{url}}"
        {{ if url == pageContext.url }}aria-current="page"{{ /if }}
    {{ else }}
        type="{{type || 'button'}}"
    {{ /if }}
    class="{{ classList |> trim }}"
    {{ ctaAttr }}
>
    {{ if (icon || iconStack) && iconBefore }}{{ iconRender }}{{ /if }}
    {{ labelRender }}
    {{ if (icon || iconStack) && !iconBefore }}{{ iconRender }}
    {{ /if }}
</{{ctaType}}>